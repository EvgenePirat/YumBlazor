@page "/product"
@inject IProductRepository _productRepository
@inject IJSRuntime _JS

<BsModal OnModalConfirmation="ConfirmDeleteClick" 
    ButtonBootstrapStyle="btn-danger" 
    ButtonText="Delete" 
    Title="Are you sure you want delete this Category?"
/>

@if (IsProcessing)
{
    <div class="position-absolute w-75 h-75 d-flex flex-column align-items-center bg-white justify-content-center">
        <img src="/images/loading.gif" alt="loading" />
    </div>
}
else
{
    <div class="card shadow border-0 mt-4">
        <div class="card-header bg-black bg-gradient m-lg-0 py-3">
            <div class="row">
                <div class="col-12 text-center">
                    <h2 class="text-white py-2">Category List</h2>
                </div>
            </div>
        </div>

        <div class="card-body p-4">
            <div class="row pb-3">
                <div class="col-12 text-end">
                    <a href="category/create" class="btn btn-lg btn-secondary" style="width: 250px">
                        <i class="bi bi-plus-square"></i>Add new Product
                    </a>
                </div>
            </div>
            <p>Product List</p>
            @if (Products.Any())
            {
                <table class="table table-bordered table-striped">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach(var product in Products)
                        {
                            <tr>
                                <td>
                                    @product.Name
                                </td>
                                <td>
                                    <a href="category/update/@product.Id" class="btn btn-primary">
                                        <i class="bi bi-pencil-square"></i>Edit
                                    </a>
                                    <button class="btn btn-danger" @onclick="() => HandleDelete(product.Id)">
                                        <i class="bi bi-trash3"></i>Delete
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
        </div>
    </div>
}

@code {
    public bool IsProcessing { get; set; } = true;
    private IEnumerable<Product> Products { get; set; } = new List<Product>();
    private int DeleteProductID { get; set; } = 0;

    protected override Task OnInitializedAsync()
    {
        return base.OnInitializedAsync();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await LoadCategories();
            IsProcessing = false;
            StateHasChanged();
        }
    }

    private async Task LoadCategories()
    {
        Products = await _productRepository.GetAllAsync();
    }

    private async Task HandleDelete(int id)
    {
        DeleteProductID = id;
        await _JS.InvokeVoidAsync("ShowConfirmationModal");
    }

    private async Task ConfirmDeleteClick(bool isConfirmed)
    {
        IsProcessing = true;
        await _JS.InvokeVoidAsync("HideConfirmationModal");
        if (isConfirmed && DeleteProductID != 0)
        {
            var result = await _productRepository.DeleteAsync(DeleteProductID);
            if (result)
                _JS?.ToastrSuccess("Category delete successfully");
            else
                _JS?.ToastrSuccess("Error encountered while deleting");

            await LoadCategories();
        }
        DeleteProductID = 0;
        IsProcessing = false;
    }

}
